// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: afsworld.proto

#ifndef PROTOBUF_afsworld_2eproto__INCLUDED
#define PROTOBUF_afsworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace afsworld {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_afsworld_2eproto();
void protobuf_AssignDesc_afsworld_2eproto();
void protobuf_ShutdownFile_afsworld_2eproto();

class AccessRequest;
class AccessResponse;
class GetAttrRequest;
class GetAttrResponse;
class GetFileRequest;
class GetFileResponse;
class MkDirRequest;
class MkDirResponse;
class MkNodRequest;
class MkNodResponse;
class OpenRequest;
class OpenResponse;
class ReadDirMessage;
class ReadDirResponse;
class ReadRequest;
class ReadResponse;
class RenameRequest;
class RenameResponse;
class RmDirRequest;
class RmDirResponse;
class StringMessage;
class UTimeRequest;
class UTimeResponse;
class UnlinkRequest;
class UnlinkResponse;
class WriteFileRequest;
class WriteFileResponse;
class WriteRequest;
class WriteResponse;

// ===================================================================

class StringMessage : public ::google::protobuf::Message {
 public:
  StringMessage();
  virtual ~StringMessage();

  StringMessage(const StringMessage& from);

  inline StringMessage& operator=(const StringMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringMessage& default_instance();

  void Swap(StringMessage* other);

  // implements Message ----------------------------------------------

  inline StringMessage* New() const { return New(NULL); }

  StringMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringMessage& from);
  void MergeFrom(const StringMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes stringmessage = 1;
  void clear_stringmessage();
  static const int kStringmessageFieldNumber = 1;
  const ::std::string& stringmessage() const;
  void set_stringmessage(const ::std::string& value);
  void set_stringmessage(const char* value);
  void set_stringmessage(const void* value, size_t size);
  ::std::string* mutable_stringmessage();
  ::std::string* release_stringmessage();
  void set_allocated_stringmessage(::std::string* stringmessage);

  // @@protoc_insertion_point(class_scope:afsworld.StringMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr stringmessage_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static StringMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirMessage : public ::google::protobuf::Message {
 public:
  ReadDirMessage();
  virtual ~ReadDirMessage();

  ReadDirMessage(const ReadDirMessage& from);

  inline ReadDirMessage& operator=(const ReadDirMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirMessage& default_instance();

  void Swap(ReadDirMessage* other);

  // implements Message ----------------------------------------------

  inline ReadDirMessage* New() const { return New(NULL); }

  ReadDirMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirMessage& from);
  void MergeFrom(const ReadDirMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadDirMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.ReadDirMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static ReadDirMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirResponse : public ::google::protobuf::Message {
 public:
  ReadDirResponse();
  virtual ~ReadDirResponse();

  ReadDirResponse(const ReadDirResponse& from);

  inline ReadDirResponse& operator=(const ReadDirResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirResponse& default_instance();

  void Swap(ReadDirResponse* other);

  // implements Message ----------------------------------------------

  inline ReadDirResponse* New() const { return New(NULL); }

  ReadDirResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirResponse& from);
  void MergeFrom(const ReadDirResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 inodenumber = 1;
  int inodenumber_size() const;
  void clear_inodenumber();
  static const int kInodenumberFieldNumber = 1;
  ::google::protobuf::int64 inodenumber(int index) const;
  void set_inodenumber(int index, ::google::protobuf::int64 value);
  void add_inodenumber(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      inodenumber() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_inodenumber();

  // repeated int32 type = 2;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type(int index) const;
  void set_type(int index, ::google::protobuf::int32 value);
  void add_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated string name = 3;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // @@protoc_insertion_point(class_scope:afsworld.ReadDirResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > inodenumber_;
  mutable int _inodenumber_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  mutable int _type_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static ReadDirResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrRequest : public ::google::protobuf::Message {
 public:
  GetAttrRequest();
  virtual ~GetAttrRequest();

  GetAttrRequest(const GetAttrRequest& from);

  inline GetAttrRequest& operator=(const GetAttrRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrRequest& default_instance();

  void Swap(GetAttrRequest* other);

  // implements Message ----------------------------------------------

  inline GetAttrRequest* New() const { return New(NULL); }

  GetAttrRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrRequest& from);
  void MergeFrom(const GetAttrRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAttrRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.GetAttrRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static GetAttrRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrResponse : public ::google::protobuf::Message {
 public:
  GetAttrResponse();
  virtual ~GetAttrResponse();

  GetAttrResponse(const GetAttrResponse& from);

  inline GetAttrResponse& operator=(const GetAttrResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrResponse& default_instance();

  void Swap(GetAttrResponse* other);

  // implements Message ----------------------------------------------

  inline GetAttrResponse* New() const { return New(NULL); }

  GetAttrResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrResponse& from);
  void MergeFrom(const GetAttrResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAttrResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::int64 dev() const;
  void set_dev(::google::protobuf::int64 value);

  // optional int64 ino = 2;
  void clear_ino();
  static const int kInoFieldNumber = 2;
  ::google::protobuf::int64 ino() const;
  void set_ino(::google::protobuf::int64 value);

  // optional int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional int64 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::int64 nlink() const;
  void set_nlink(::google::protobuf::int64 value);

  // optional int32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 gid = 6;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional int64 rdev = 7;
  void clear_rdev();
  static const int kRdevFieldNumber = 7;
  ::google::protobuf::int64 rdev() const;
  void set_rdev(::google::protobuf::int64 value);

  // optional int64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 atime = 9;
  void clear_atime();
  static const int kAtimeFieldNumber = 9;
  ::google::protobuf::int64 atime() const;
  void set_atime(::google::protobuf::int64 value);

  // optional int64 mtime = 10;
  void clear_mtime();
  static const int kMtimeFieldNumber = 10;
  ::google::protobuf::int64 mtime() const;
  void set_mtime(::google::protobuf::int64 value);

  // optional int64 ctime = 11;
  void clear_ctime();
  static const int kCtimeFieldNumber = 11;
  ::google::protobuf::int64 ctime() const;
  void set_ctime(::google::protobuf::int64 value);

  // optional int64 blksize = 12;
  void clear_blksize();
  static const int kBlksizeFieldNumber = 12;
  ::google::protobuf::int64 blksize() const;
  void set_blksize(::google::protobuf::int64 value);

  // optional int64 blocks = 13;
  void clear_blocks();
  static const int kBlocksFieldNumber = 13;
  ::google::protobuf::int64 blocks() const;
  void set_blocks(::google::protobuf::int64 value);

  // optional int32 res = 14;
  void clear_res();
  static const int kResFieldNumber = 14;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.GetAttrResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 dev_;
  ::google::protobuf::int64 ino_;
  ::google::protobuf::int64 nlink_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int64 rdev_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 atime_;
  ::google::protobuf::int64 mtime_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 res_;
  ::google::protobuf::int64 ctime_;
  ::google::protobuf::int64 blksize_;
  ::google::protobuf::int64 blocks_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static GetAttrResponse* default_instance_;
};
// -------------------------------------------------------------------

class MkDirRequest : public ::google::protobuf::Message {
 public:
  MkDirRequest();
  virtual ~MkDirRequest();

  MkDirRequest(const MkDirRequest& from);

  inline MkDirRequest& operator=(const MkDirRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirRequest& default_instance();

  void Swap(MkDirRequest* other);

  // implements Message ----------------------------------------------

  inline MkDirRequest* New() const { return New(NULL); }

  MkDirRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirRequest& from);
  void MergeFrom(const MkDirRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkDirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.MkDirRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static MkDirRequest* default_instance_;
};
// -------------------------------------------------------------------

class MkDirResponse : public ::google::protobuf::Message {
 public:
  MkDirResponse();
  virtual ~MkDirResponse();

  MkDirResponse(const MkDirResponse& from);

  inline MkDirResponse& operator=(const MkDirResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirResponse& default_instance();

  void Swap(MkDirResponse* other);

  // implements Message ----------------------------------------------

  inline MkDirResponse* New() const { return New(NULL); }

  MkDirResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirResponse& from);
  void MergeFrom(const MkDirResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.MkDirResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static MkDirResponse* default_instance_;
};
// -------------------------------------------------------------------

class RmDirRequest : public ::google::protobuf::Message {
 public:
  RmDirRequest();
  virtual ~RmDirRequest();

  RmDirRequest(const RmDirRequest& from);

  inline RmDirRequest& operator=(const RmDirRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirRequest& default_instance();

  void Swap(RmDirRequest* other);

  // implements Message ----------------------------------------------

  inline RmDirRequest* New() const { return New(NULL); }

  RmDirRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirRequest& from);
  void MergeFrom(const RmDirRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RmDirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.RmDirRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static RmDirRequest* default_instance_;
};
// -------------------------------------------------------------------

class RmDirResponse : public ::google::protobuf::Message {
 public:
  RmDirResponse();
  virtual ~RmDirResponse();

  RmDirResponse(const RmDirResponse& from);

  inline RmDirResponse& operator=(const RmDirResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirResponse& default_instance();

  void Swap(RmDirResponse* other);

  // implements Message ----------------------------------------------

  inline RmDirResponse* New() const { return New(NULL); }

  RmDirResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirResponse& from);
  void MergeFrom(const RmDirResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RmDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.RmDirResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static RmDirResponse* default_instance_;
};
// -------------------------------------------------------------------

class MkNodRequest : public ::google::protobuf::Message {
 public:
  MkNodRequest();
  virtual ~MkNodRequest();

  MkNodRequest(const MkNodRequest& from);

  inline MkNodRequest& operator=(const MkNodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkNodRequest& default_instance();

  void Swap(MkNodRequest* other);

  // implements Message ----------------------------------------------

  inline MkNodRequest* New() const { return New(NULL); }

  MkNodRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkNodRequest& from);
  void MergeFrom(const MkNodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkNodRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional int64 rdev = 3;
  void clear_rdev();
  static const int kRdevFieldNumber = 3;
  ::google::protobuf::int64 rdev() const;
  void set_rdev(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:afsworld.MkNodRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 rdev_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static MkNodRequest* default_instance_;
};
// -------------------------------------------------------------------

class MkNodResponse : public ::google::protobuf::Message {
 public:
  MkNodResponse();
  virtual ~MkNodResponse();

  MkNodResponse(const MkNodResponse& from);

  inline MkNodResponse& operator=(const MkNodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkNodResponse& default_instance();

  void Swap(MkNodResponse* other);

  // implements Message ----------------------------------------------

  inline MkNodResponse* New() const { return New(NULL); }

  MkNodResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkNodResponse& from);
  void MergeFrom(const MkNodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkNodResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.MkNodResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static MkNodResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReadRequest : public ::google::protobuf::Message {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  void Swap(ReadRequest* other);

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const { return New(NULL); }

  ReadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:afsworld.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static ReadRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReadResponse : public ::google::protobuf::Message {
 public:
  ReadResponse();
  virtual ~ReadResponse();

  ReadResponse(const ReadResponse& from);

  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadResponse& default_instance();

  void Swap(ReadResponse* other);

  // implements Message ----------------------------------------------

  inline ReadResponse* New() const { return New(NULL); }

  ReadResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadResponse& from);
  void MergeFrom(const ReadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const char* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int32 res = 2;
  void clear_res();
  static const int kResFieldNumber = 2;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.ReadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static ReadResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFileRequest : public ::google::protobuf::Message {
 public:
  GetFileRequest();
  virtual ~GetFileRequest();

  GetFileRequest(const GetFileRequest& from);

  inline GetFileRequest& operator=(const GetFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileRequest& default_instance();

  void Swap(GetFileRequest* other);

  // implements Message ----------------------------------------------

  inline GetFileRequest* New() const { return New(NULL); }

  GetFileRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFileRequest& from);
  void MergeFrom(const GetFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.GetFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static GetFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFileResponse : public ::google::protobuf::Message {
 public:
  GetFileResponse();
  virtual ~GetFileResponse();

  GetFileResponse(const GetFileResponse& from);

  inline GetFileResponse& operator=(const GetFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileResponse& default_instance();

  void Swap(GetFileResponse* other);

  // implements Message ----------------------------------------------

  inline GetFileResponse* New() const { return New(NULL); }

  GetFileResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFileResponse& from);
  void MergeFrom(const GetFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int32 res = 2;
  void clear_res();
  static const int kResFieldNumber = 2;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // optional int64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:afsworld.GetFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static GetFileResponse* default_instance_;
};
// -------------------------------------------------------------------

class WriteFileRequest : public ::google::protobuf::Message {
 public:
  WriteFileRequest();
  virtual ~WriteFileRequest();

  WriteFileRequest(const WriteFileRequest& from);

  inline WriteFileRequest& operator=(const WriteFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteFileRequest& default_instance();

  void Swap(WriteFileRequest* other);

  // implements Message ----------------------------------------------

  inline WriteFileRequest* New() const { return New(NULL); }

  WriteFileRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteFileRequest& from);
  void MergeFrom(const WriteFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional string path = 3;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.WriteFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static WriteFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteFileResponse : public ::google::protobuf::Message {
 public:
  WriteFileResponse();
  virtual ~WriteFileResponse();

  WriteFileResponse(const WriteFileResponse& from);

  inline WriteFileResponse& operator=(const WriteFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteFileResponse& default_instance();

  void Swap(WriteFileResponse* other);

  // implements Message ----------------------------------------------

  inline WriteFileResponse* New() const { return New(NULL); }

  WriteFileResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteFileResponse& from);
  void MergeFrom(const WriteFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.WriteFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static WriteFileResponse* default_instance_;
};
// -------------------------------------------------------------------

class OpenRequest : public ::google::protobuf::Message {
 public:
  OpenRequest();
  virtual ~OpenRequest();

  OpenRequest(const OpenRequest& from);

  inline OpenRequest& operator=(const OpenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenRequest& default_instance();

  void Swap(OpenRequest* other);

  // implements Message ----------------------------------------------

  inline OpenRequest* New() const { return New(NULL); }

  OpenRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenRequest& from);
  void MergeFrom(const OpenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.OpenRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 flags_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static OpenRequest* default_instance_;
};
// -------------------------------------------------------------------

class OpenResponse : public ::google::protobuf::Message {
 public:
  OpenResponse();
  virtual ~OpenResponse();

  OpenResponse(const OpenResponse& from);

  inline OpenResponse& operator=(const OpenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenResponse& default_instance();

  void Swap(OpenResponse* other);

  // implements Message ----------------------------------------------

  inline OpenResponse* New() const { return New(NULL); }

  OpenResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenResponse& from);
  void MergeFrom(const OpenResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.OpenResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static OpenResponse* default_instance_;
};
// -------------------------------------------------------------------

class WriteRequest : public ::google::protobuf::Message {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();

  void Swap(WriteRequest* other);

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const { return New(NULL); }

  WriteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const char* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:afsworld.WriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static WriteRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteResponse : public ::google::protobuf::Message {
 public:
  WriteResponse();
  virtual ~WriteResponse();

  WriteResponse(const WriteResponse& from);

  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteResponse& default_instance();

  void Swap(WriteResponse* other);

  // implements Message ----------------------------------------------

  inline WriteResponse* New() const { return New(NULL); }

  WriteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.WriteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static WriteResponse* default_instance_;
};
// -------------------------------------------------------------------

class AccessRequest : public ::google::protobuf::Message {
 public:
  AccessRequest();
  virtual ~AccessRequest();

  AccessRequest(const AccessRequest& from);

  inline AccessRequest& operator=(const AccessRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessRequest& default_instance();

  void Swap(AccessRequest* other);

  // implements Message ----------------------------------------------

  inline AccessRequest* New() const { return New(NULL); }

  AccessRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccessRequest& from);
  void MergeFrom(const AccessRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mask = 2;
  void clear_mask();
  static const int kMaskFieldNumber = 2;
  ::google::protobuf::int32 mask() const;
  void set_mask(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.AccessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mask_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static AccessRequest* default_instance_;
};
// -------------------------------------------------------------------

class AccessResponse : public ::google::protobuf::Message {
 public:
  AccessResponse();
  virtual ~AccessResponse();

  AccessResponse(const AccessResponse& from);

  inline AccessResponse& operator=(const AccessResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessResponse& default_instance();

  void Swap(AccessResponse* other);

  // implements Message ----------------------------------------------

  inline AccessResponse* New() const { return New(NULL); }

  AccessResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccessResponse& from);
  void MergeFrom(const AccessResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.AccessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static AccessResponse* default_instance_;
};
// -------------------------------------------------------------------

class UTimeRequest : public ::google::protobuf::Message {
 public:
  UTimeRequest();
  virtual ~UTimeRequest();

  UTimeRequest(const UTimeRequest& from);

  inline UTimeRequest& operator=(const UTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UTimeRequest& default_instance();

  void Swap(UTimeRequest* other);

  // implements Message ----------------------------------------------

  inline UTimeRequest* New() const { return New(NULL); }

  UTimeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UTimeRequest& from);
  void MergeFrom(const UTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UTimeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.UTimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static UTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UTimeResponse : public ::google::protobuf::Message {
 public:
  UTimeResponse();
  virtual ~UTimeResponse();

  UTimeResponse(const UTimeResponse& from);

  inline UTimeResponse& operator=(const UTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UTimeResponse& default_instance();

  void Swap(UTimeResponse* other);

  // implements Message ----------------------------------------------

  inline UTimeResponse* New() const { return New(NULL); }

  UTimeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UTimeResponse& from);
  void MergeFrom(const UTimeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UTimeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.UTimeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static UTimeResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkRequest : public ::google::protobuf::Message {
 public:
  UnlinkRequest();
  virtual ~UnlinkRequest();

  UnlinkRequest(const UnlinkRequest& from);

  inline UnlinkRequest& operator=(const UnlinkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkRequest& default_instance();

  void Swap(UnlinkRequest* other);

  // implements Message ----------------------------------------------

  inline UnlinkRequest* New() const { return New(NULL); }

  UnlinkRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkRequest& from);
  void MergeFrom(const UnlinkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnlinkRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:afsworld.UnlinkRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static UnlinkRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkResponse : public ::google::protobuf::Message {
 public:
  UnlinkResponse();
  virtual ~UnlinkResponse();

  UnlinkResponse(const UnlinkResponse& from);

  inline UnlinkResponse& operator=(const UnlinkResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkResponse& default_instance();

  void Swap(UnlinkResponse* other);

  // implements Message ----------------------------------------------

  inline UnlinkResponse* New() const { return New(NULL); }

  UnlinkResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkResponse& from);
  void MergeFrom(const UnlinkResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnlinkResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.UnlinkResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static UnlinkResponse* default_instance_;
};
// -------------------------------------------------------------------

class RenameRequest : public ::google::protobuf::Message {
 public:
  RenameRequest();
  virtual ~RenameRequest();

  RenameRequest(const RenameRequest& from);

  inline RenameRequest& operator=(const RenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameRequest& default_instance();

  void Swap(RenameRequest* other);

  // implements Message ----------------------------------------------

  inline RenameRequest* New() const { return New(NULL); }

  RenameRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameRequest& from);
  void MergeFrom(const RenameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string toName = 1;
  void clear_toname();
  static const int kToNameFieldNumber = 1;
  const ::std::string& toname() const;
  void set_toname(const ::std::string& value);
  void set_toname(const char* value);
  void set_toname(const char* value, size_t size);
  ::std::string* mutable_toname();
  ::std::string* release_toname();
  void set_allocated_toname(::std::string* toname);

  // optional string fromName = 2;
  void clear_fromname();
  static const int kFromNameFieldNumber = 2;
  const ::std::string& fromname() const;
  void set_fromname(const ::std::string& value);
  void set_fromname(const char* value);
  void set_fromname(const char* value, size_t size);
  ::std::string* mutable_fromname();
  ::std::string* release_fromname();
  void set_allocated_fromname(::std::string* fromname);

  // @@protoc_insertion_point(class_scope:afsworld.RenameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr toname_;
  ::google::protobuf::internal::ArenaStringPtr fromname_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static RenameRequest* default_instance_;
};
// -------------------------------------------------------------------

class RenameResponse : public ::google::protobuf::Message {
 public:
  RenameResponse();
  virtual ~RenameResponse();

  RenameResponse(const RenameResponse& from);

  inline RenameResponse& operator=(const RenameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameResponse& default_instance();

  void Swap(RenameResponse* other);

  // implements Message ----------------------------------------------

  inline RenameResponse* New() const { return New(NULL); }

  RenameResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameResponse& from);
  void MergeFrom(const RenameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int32 res() const;
  void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afsworld.RenameResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afsworld_2eproto();
  friend void protobuf_AssignDesc_afsworld_2eproto();
  friend void protobuf_ShutdownFile_afsworld_2eproto();

  void InitAsDefaultInstance();
  static RenameResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StringMessage

// optional bytes stringmessage = 1;
inline void StringMessage::clear_stringmessage() {
  stringmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringMessage::stringmessage() const {
  // @@protoc_insertion_point(field_get:afsworld.StringMessage.stringmessage)
  return stringmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringMessage::set_stringmessage(const ::std::string& value) {
  
  stringmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.StringMessage.stringmessage)
}
inline void StringMessage::set_stringmessage(const char* value) {
  
  stringmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.StringMessage.stringmessage)
}
inline void StringMessage::set_stringmessage(const void* value, size_t size) {
  
  stringmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.StringMessage.stringmessage)
}
inline ::std::string* StringMessage::mutable_stringmessage() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.StringMessage.stringmessage)
  return stringmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringMessage::release_stringmessage() {
  
  return stringmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringMessage::set_allocated_stringmessage(::std::string* stringmessage) {
  if (stringmessage != NULL) {
    
  } else {
    
  }
  stringmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringmessage);
  // @@protoc_insertion_point(field_set_allocated:afsworld.StringMessage.stringmessage)
}

// -------------------------------------------------------------------

// ReadDirMessage

// optional string path = 1;
inline void ReadDirMessage::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirMessage::path() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadDirMessage.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirMessage::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.ReadDirMessage.path)
}
inline void ReadDirMessage::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.ReadDirMessage.path)
}
inline void ReadDirMessage::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.ReadDirMessage.path)
}
inline ::std::string* ReadDirMessage::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.ReadDirMessage.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirMessage::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirMessage::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.ReadDirMessage.path)
}

// -------------------------------------------------------------------

// ReadDirResponse

// repeated int64 inodenumber = 1;
inline int ReadDirResponse::inodenumber_size() const {
  return inodenumber_.size();
}
inline void ReadDirResponse::clear_inodenumber() {
  inodenumber_.Clear();
}
inline ::google::protobuf::int64 ReadDirResponse::inodenumber(int index) const {
  // @@protoc_insertion_point(field_get:afsworld.ReadDirResponse.inodenumber)
  return inodenumber_.Get(index);
}
inline void ReadDirResponse::set_inodenumber(int index, ::google::protobuf::int64 value) {
  inodenumber_.Set(index, value);
  // @@protoc_insertion_point(field_set:afsworld.ReadDirResponse.inodenumber)
}
inline void ReadDirResponse::add_inodenumber(::google::protobuf::int64 value) {
  inodenumber_.Add(value);
  // @@protoc_insertion_point(field_add:afsworld.ReadDirResponse.inodenumber)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ReadDirResponse::inodenumber() const {
  // @@protoc_insertion_point(field_list:afsworld.ReadDirResponse.inodenumber)
  return inodenumber_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ReadDirResponse::mutable_inodenumber() {
  // @@protoc_insertion_point(field_mutable_list:afsworld.ReadDirResponse.inodenumber)
  return &inodenumber_;
}

// repeated int32 type = 2;
inline int ReadDirResponse::type_size() const {
  return type_.size();
}
inline void ReadDirResponse::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::int32 ReadDirResponse::type(int index) const {
  // @@protoc_insertion_point(field_get:afsworld.ReadDirResponse.type)
  return type_.Get(index);
}
inline void ReadDirResponse::set_type(int index, ::google::protobuf::int32 value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:afsworld.ReadDirResponse.type)
}
inline void ReadDirResponse::add_type(::google::protobuf::int32 value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:afsworld.ReadDirResponse.type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReadDirResponse::type() const {
  // @@protoc_insertion_point(field_list:afsworld.ReadDirResponse.type)
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReadDirResponse::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:afsworld.ReadDirResponse.type)
  return &type_;
}

// repeated string name = 3;
inline int ReadDirResponse::name_size() const {
  return name_.size();
}
inline void ReadDirResponse::clear_name() {
  name_.Clear();
}
inline const ::std::string& ReadDirResponse::name(int index) const {
  // @@protoc_insertion_point(field_get:afsworld.ReadDirResponse.name)
  return name_.Get(index);
}
inline ::std::string* ReadDirResponse::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:afsworld.ReadDirResponse.name)
  return name_.Mutable(index);
}
inline void ReadDirResponse::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:afsworld.ReadDirResponse.name)
  name_.Mutable(index)->assign(value);
}
inline void ReadDirResponse::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:afsworld.ReadDirResponse.name)
}
inline void ReadDirResponse::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:afsworld.ReadDirResponse.name)
}
inline ::std::string* ReadDirResponse::add_name() {
  return name_.Add();
}
inline void ReadDirResponse::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:afsworld.ReadDirResponse.name)
}
inline void ReadDirResponse::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:afsworld.ReadDirResponse.name)
}
inline void ReadDirResponse::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:afsworld.ReadDirResponse.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReadDirResponse::name() const {
  // @@protoc_insertion_point(field_list:afsworld.ReadDirResponse.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReadDirResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:afsworld.ReadDirResponse.name)
  return &name_;
}

// -------------------------------------------------------------------

// GetAttrRequest

// optional string path = 1;
inline void GetAttrRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.GetAttrRequest.path)
}
inline void GetAttrRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.GetAttrRequest.path)
}
inline void GetAttrRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.GetAttrRequest.path)
}
inline ::std::string* GetAttrRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.GetAttrRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.GetAttrRequest.path)
}

// -------------------------------------------------------------------

// GetAttrResponse

// optional int64 dev = 1;
inline void GetAttrResponse::clear_dev() {
  dev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::dev() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.dev)
  return dev_;
}
inline void GetAttrResponse::set_dev(::google::protobuf::int64 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.dev)
}

// optional int64 ino = 2;
inline void GetAttrResponse::clear_ino() {
  ino_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::ino() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.ino)
  return ino_;
}
inline void GetAttrResponse::set_ino(::google::protobuf::int64 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.ino)
}

// optional int32 mode = 3;
inline void GetAttrResponse::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponse::mode() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.mode)
  return mode_;
}
inline void GetAttrResponse::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.mode)
}

// optional int64 nlink = 4;
inline void GetAttrResponse::clear_nlink() {
  nlink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::nlink() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.nlink)
  return nlink_;
}
inline void GetAttrResponse::set_nlink(::google::protobuf::int64 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.nlink)
}

// optional int32 uid = 5;
inline void GetAttrResponse::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponse::uid() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.uid)
  return uid_;
}
inline void GetAttrResponse::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.uid)
}

// optional int32 gid = 6;
inline void GetAttrResponse::clear_gid() {
  gid_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponse::gid() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.gid)
  return gid_;
}
inline void GetAttrResponse::set_gid(::google::protobuf::int32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.gid)
}

// optional int64 rdev = 7;
inline void GetAttrResponse::clear_rdev() {
  rdev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::rdev() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.rdev)
  return rdev_;
}
inline void GetAttrResponse::set_rdev(::google::protobuf::int64 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.rdev)
}

// optional int64 size = 8;
inline void GetAttrResponse::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::size() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.size)
  return size_;
}
inline void GetAttrResponse::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.size)
}

// optional int64 atime = 9;
inline void GetAttrResponse::clear_atime() {
  atime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::atime() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.atime)
  return atime_;
}
inline void GetAttrResponse::set_atime(::google::protobuf::int64 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.atime)
}

// optional int64 mtime = 10;
inline void GetAttrResponse::clear_mtime() {
  mtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::mtime() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.mtime)
  return mtime_;
}
inline void GetAttrResponse::set_mtime(::google::protobuf::int64 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.mtime)
}

// optional int64 ctime = 11;
inline void GetAttrResponse::clear_ctime() {
  ctime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::ctime() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.ctime)
  return ctime_;
}
inline void GetAttrResponse::set_ctime(::google::protobuf::int64 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.ctime)
}

// optional int64 blksize = 12;
inline void GetAttrResponse::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::blksize() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.blksize)
  return blksize_;
}
inline void GetAttrResponse::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.blksize)
}

// optional int64 blocks = 13;
inline void GetAttrResponse::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponse::blocks() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.blocks)
  return blocks_;
}
inline void GetAttrResponse::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.blocks)
}

// optional int32 res = 14;
inline void GetAttrResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.GetAttrResponse.res)
  return res_;
}
inline void GetAttrResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetAttrResponse.res)
}

// -------------------------------------------------------------------

// MkDirRequest

// optional string path = 1;
inline void MkDirRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkDirRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.MkDirRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.MkDirRequest.path)
}
inline void MkDirRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.MkDirRequest.path)
}
inline void MkDirRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.MkDirRequest.path)
}
inline ::std::string* MkDirRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.MkDirRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkDirRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.MkDirRequest.path)
}

// optional int32 mode = 2;
inline void MkDirRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MkDirRequest::mode() const {
  // @@protoc_insertion_point(field_get:afsworld.MkDirRequest.mode)
  return mode_;
}
inline void MkDirRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:afsworld.MkDirRequest.mode)
}

// -------------------------------------------------------------------

// MkDirResponse

// optional int32 res = 1;
inline void MkDirResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 MkDirResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.MkDirResponse.res)
  return res_;
}
inline void MkDirResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.MkDirResponse.res)
}

// -------------------------------------------------------------------

// RmDirRequest

// optional string path = 1;
inline void RmDirRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RmDirRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.RmDirRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.RmDirRequest.path)
}
inline void RmDirRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.RmDirRequest.path)
}
inline void RmDirRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.RmDirRequest.path)
}
inline ::std::string* RmDirRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.RmDirRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RmDirRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.RmDirRequest.path)
}

// -------------------------------------------------------------------

// RmDirResponse

// optional int32 res = 1;
inline void RmDirResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 RmDirResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.RmDirResponse.res)
  return res_;
}
inline void RmDirResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.RmDirResponse.res)
}

// -------------------------------------------------------------------

// MkNodRequest

// optional string path = 1;
inline void MkNodRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkNodRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.MkNodRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkNodRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.MkNodRequest.path)
}
inline void MkNodRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.MkNodRequest.path)
}
inline void MkNodRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.MkNodRequest.path)
}
inline ::std::string* MkNodRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.MkNodRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkNodRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkNodRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.MkNodRequest.path)
}

// optional int32 mode = 2;
inline void MkNodRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MkNodRequest::mode() const {
  // @@protoc_insertion_point(field_get:afsworld.MkNodRequest.mode)
  return mode_;
}
inline void MkNodRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:afsworld.MkNodRequest.mode)
}

// optional int64 rdev = 3;
inline void MkNodRequest::clear_rdev() {
  rdev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MkNodRequest::rdev() const {
  // @@protoc_insertion_point(field_get:afsworld.MkNodRequest.rdev)
  return rdev_;
}
inline void MkNodRequest::set_rdev(::google::protobuf::int64 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:afsworld.MkNodRequest.rdev)
}

// -------------------------------------------------------------------

// MkNodResponse

// optional int32 res = 1;
inline void MkNodResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 MkNodResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.MkNodResponse.res)
  return res_;
}
inline void MkNodResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.MkNodResponse.res)
}

// -------------------------------------------------------------------

// ReadRequest

// optional string path = 1;
inline void ReadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.ReadRequest.path)
}
inline void ReadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.ReadRequest.path)
}
inline void ReadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.ReadRequest.path)
}
inline ::std::string* ReadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.ReadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.ReadRequest.path)
}

// optional int64 size = 2;
inline void ReadRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReadRequest::size() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadRequest.size)
  return size_;
}
inline void ReadRequest::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afsworld.ReadRequest.size)
}

// optional int64 offset = 3;
inline void ReadRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReadRequest::offset() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadRequest.offset)
  return offset_;
}
inline void ReadRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:afsworld.ReadRequest.offset)
}

// -------------------------------------------------------------------

// ReadResponse

// optional string buf = 1;
inline void ReadResponse::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadResponse::buf() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadResponse.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResponse::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.ReadResponse.buf)
}
inline void ReadResponse::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.ReadResponse.buf)
}
inline void ReadResponse::set_buf(const char* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.ReadResponse.buf)
}
inline ::std::string* ReadResponse::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.ReadResponse.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadResponse::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResponse::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:afsworld.ReadResponse.buf)
}

// optional int32 res = 2;
inline void ReadResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 ReadResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.ReadResponse.res)
  return res_;
}
inline void ReadResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.ReadResponse.res)
}

// -------------------------------------------------------------------

// GetFileRequest

// optional string path = 1;
inline void GetFileRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.GetFileRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.GetFileRequest.path)
}
inline void GetFileRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.GetFileRequest.path)
}
inline void GetFileRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.GetFileRequest.path)
}
inline ::std::string* GetFileRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.GetFileRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.GetFileRequest.path)
}

// -------------------------------------------------------------------

// GetFileResponse

// optional bytes buf = 1;
inline void GetFileResponse::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileResponse::buf() const {
  // @@protoc_insertion_point(field_get:afsworld.GetFileResponse.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileResponse::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.GetFileResponse.buf)
}
inline void GetFileResponse::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.GetFileResponse.buf)
}
inline void GetFileResponse::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.GetFileResponse.buf)
}
inline ::std::string* GetFileResponse::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.GetFileResponse.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileResponse::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileResponse::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:afsworld.GetFileResponse.buf)
}

// optional int32 res = 2;
inline void GetFileResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 GetFileResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.GetFileResponse.res)
  return res_;
}
inline void GetFileResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetFileResponse.res)
}

// optional int64 size = 3;
inline void GetFileResponse::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetFileResponse::size() const {
  // @@protoc_insertion_point(field_get:afsworld.GetFileResponse.size)
  return size_;
}
inline void GetFileResponse::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afsworld.GetFileResponse.size)
}

// -------------------------------------------------------------------

// WriteFileRequest

// optional bytes buf = 1;
inline void WriteFileRequest::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteFileRequest::buf() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteFileRequest.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteFileRequest::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.WriteFileRequest.buf)
}
inline void WriteFileRequest::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.WriteFileRequest.buf)
}
inline void WriteFileRequest::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.WriteFileRequest.buf)
}
inline ::std::string* WriteFileRequest::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.WriteFileRequest.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteFileRequest::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteFileRequest::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:afsworld.WriteFileRequest.buf)
}

// optional int64 size = 2;
inline void WriteFileRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WriteFileRequest::size() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteFileRequest.size)
  return size_;
}
inline void WriteFileRequest::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afsworld.WriteFileRequest.size)
}

// optional string path = 3;
inline void WriteFileRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteFileRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteFileRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteFileRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.WriteFileRequest.path)
}
inline void WriteFileRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.WriteFileRequest.path)
}
inline void WriteFileRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.WriteFileRequest.path)
}
inline ::std::string* WriteFileRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.WriteFileRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteFileRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteFileRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.WriteFileRequest.path)
}

// -------------------------------------------------------------------

// WriteFileResponse

// optional int32 res = 1;
inline void WriteFileResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 WriteFileResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteFileResponse.res)
  return res_;
}
inline void WriteFileResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.WriteFileResponse.res)
}

// -------------------------------------------------------------------

// OpenRequest

// optional string path = 1;
inline void OpenRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.OpenRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.OpenRequest.path)
}
inline void OpenRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.OpenRequest.path)
}
inline void OpenRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.OpenRequest.path)
}
inline ::std::string* OpenRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.OpenRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.OpenRequest.path)
}

// optional int32 flags = 2;
inline void OpenRequest::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 OpenRequest::flags() const {
  // @@protoc_insertion_point(field_get:afsworld.OpenRequest.flags)
  return flags_;
}
inline void OpenRequest::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:afsworld.OpenRequest.flags)
}

// -------------------------------------------------------------------

// OpenResponse

// optional int32 res = 1;
inline void OpenResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 OpenResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.OpenResponse.res)
  return res_;
}
inline void OpenResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.OpenResponse.res)
}

// -------------------------------------------------------------------

// WriteRequest

// optional string path = 1;
inline void WriteRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.WriteRequest.path)
}
inline void WriteRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.WriteRequest.path)
}
inline void WriteRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.WriteRequest.path)
}
inline ::std::string* WriteRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.WriteRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.WriteRequest.path)
}

// optional string buf = 2;
inline void WriteRequest::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::buf() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteRequest.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.WriteRequest.buf)
}
inline void WriteRequest::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.WriteRequest.buf)
}
inline void WriteRequest::set_buf(const char* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.WriteRequest.buf)
}
inline ::std::string* WriteRequest::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.WriteRequest.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:afsworld.WriteRequest.buf)
}

// optional int64 size = 3;
inline void WriteRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WriteRequest::size() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteRequest.size)
  return size_;
}
inline void WriteRequest::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afsworld.WriteRequest.size)
}

// optional int64 offset = 4;
inline void WriteRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WriteRequest::offset() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteRequest.offset)
  return offset_;
}
inline void WriteRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:afsworld.WriteRequest.offset)
}

// -------------------------------------------------------------------

// WriteResponse

// optional int32 res = 1;
inline void WriteResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 WriteResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.WriteResponse.res)
  return res_;
}
inline void WriteResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.WriteResponse.res)
}

// -------------------------------------------------------------------

// AccessRequest

// optional string path = 1;
inline void AccessRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.AccessRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.AccessRequest.path)
}
inline void AccessRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.AccessRequest.path)
}
inline void AccessRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.AccessRequest.path)
}
inline ::std::string* AccessRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.AccessRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.AccessRequest.path)
}

// optional int32 mask = 2;
inline void AccessRequest::clear_mask() {
  mask_ = 0;
}
inline ::google::protobuf::int32 AccessRequest::mask() const {
  // @@protoc_insertion_point(field_get:afsworld.AccessRequest.mask)
  return mask_;
}
inline void AccessRequest::set_mask(::google::protobuf::int32 value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:afsworld.AccessRequest.mask)
}

// -------------------------------------------------------------------

// AccessResponse

// optional int32 res = 1;
inline void AccessResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 AccessResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.AccessResponse.res)
  return res_;
}
inline void AccessResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.AccessResponse.res)
}

// -------------------------------------------------------------------

// UTimeRequest

// optional string path = 1;
inline void UTimeRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UTimeRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.UTimeRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UTimeRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.UTimeRequest.path)
}
inline void UTimeRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.UTimeRequest.path)
}
inline void UTimeRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.UTimeRequest.path)
}
inline ::std::string* UTimeRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.UTimeRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UTimeRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UTimeRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.UTimeRequest.path)
}

// -------------------------------------------------------------------

// UTimeResponse

// optional int32 res = 1;
inline void UTimeResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 UTimeResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.UTimeResponse.res)
  return res_;
}
inline void UTimeResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.UTimeResponse.res)
}

// -------------------------------------------------------------------

// UnlinkRequest

// optional string path = 1;
inline void UnlinkRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlinkRequest::path() const {
  // @@protoc_insertion_point(field_get:afsworld.UnlinkRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.UnlinkRequest.path)
}
inline void UnlinkRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.UnlinkRequest.path)
}
inline void UnlinkRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.UnlinkRequest.path)
}
inline ::std::string* UnlinkRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.UnlinkRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlinkRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afsworld.UnlinkRequest.path)
}

// -------------------------------------------------------------------

// UnlinkResponse

// optional int32 res = 1;
inline void UnlinkResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 UnlinkResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.UnlinkResponse.res)
  return res_;
}
inline void UnlinkResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.UnlinkResponse.res)
}

// -------------------------------------------------------------------

// RenameRequest

// optional string toName = 1;
inline void RenameRequest::clear_toname() {
  toname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::toname() const {
  // @@protoc_insertion_point(field_get:afsworld.RenameRequest.toName)
  return toname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_toname(const ::std::string& value) {
  
  toname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.RenameRequest.toName)
}
inline void RenameRequest::set_toname(const char* value) {
  
  toname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.RenameRequest.toName)
}
inline void RenameRequest::set_toname(const char* value, size_t size) {
  
  toname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.RenameRequest.toName)
}
inline ::std::string* RenameRequest::mutable_toname() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.RenameRequest.toName)
  return toname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_toname() {
  
  return toname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_toname(::std::string* toname) {
  if (toname != NULL) {
    
  } else {
    
  }
  toname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toname);
  // @@protoc_insertion_point(field_set_allocated:afsworld.RenameRequest.toName)
}

// optional string fromName = 2;
inline void RenameRequest::clear_fromname() {
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::fromname() const {
  // @@protoc_insertion_point(field_get:afsworld.RenameRequest.fromName)
  return fromname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_fromname(const ::std::string& value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afsworld.RenameRequest.fromName)
}
inline void RenameRequest::set_fromname(const char* value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afsworld.RenameRequest.fromName)
}
inline void RenameRequest::set_fromname(const char* value, size_t size) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afsworld.RenameRequest.fromName)
}
inline ::std::string* RenameRequest::mutable_fromname() {
  
  // @@protoc_insertion_point(field_mutable:afsworld.RenameRequest.fromName)
  return fromname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_fromname() {
  
  return fromname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_fromname(::std::string* fromname) {
  if (fromname != NULL) {
    
  } else {
    
  }
  fromname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromname);
  // @@protoc_insertion_point(field_set_allocated:afsworld.RenameRequest.fromName)
}

// -------------------------------------------------------------------

// RenameResponse

// optional int32 res = 1;
inline void RenameResponse::clear_res() {
  res_ = 0;
}
inline ::google::protobuf::int32 RenameResponse::res() const {
  // @@protoc_insertion_point(field_get:afsworld.RenameResponse.res)
  return res_;
}
inline void RenameResponse::set_res(::google::protobuf::int32 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:afsworld.RenameResponse.res)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace afsworld

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_afsworld_2eproto__INCLUDED
